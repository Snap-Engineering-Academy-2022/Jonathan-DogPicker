{"ast":null,"code":"var _jsxFileName = \"/Users/jonathansi/Desktop/sea/Dog-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport './App.css';\nimport characters from './protagonists.json';\nimport CharacterCard from './CharacterCard.js';\nimport TraitCard from './TraitCard.js';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dogData, setDogData] = useState([]);\n  const [dogTemperaments, setDogTemperaments] = useState([]);\n\n  function newFetch() {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://api.thedogapi.com/v1/images/search?size=med&mime_types=jpg&format=json&has_breeds=true&order=RANDOM&page=0&limit=30\", requestOptions).then(response => response.json()).then(result => {\n      console.log(\"2 inside fetch\", Date.now());\n      console.log(\"3 special dogs\", result, \"---\", Date.now());\n      setDogData(result); // setDogTemperaments(result[breeds][0].temperament)\n\n      setDogTemperaments(result);\n    }).catch(error => console.log('error', error));\n    console.log(\"4 after fetch\", dogTemperaments, \"---\", Date.now());\n  }\n\n  useEffect(() => {\n    newFetch();\n  }, []); // var traits = new Set([]);\n  // for(let i = 0; i < dogTemperaments.length; i++) {\n  //   let newArr = []\n  //   if ('temperament' in dogTemperaments[i].breeds[0]) {\n  //     if (dogTemperaments[i].breeds[0].temperament.includes(',') === true) {\n  //       newArr = dogTemperaments[i].breeds[0].temperament.split(', ')\n  //     }\n  //     else {\n  //       newArr = dogTemperaments[i].breeds[0].temperament\n  //     }\n  //   }\n  //   traits = new Set([...traits, ...newArr]);\n  // }\n  // traits = Array.from(traits)\n  // var selected = []\n  // console.log(\"<++++++++DogTemps++++>\", dogTemperaments)\n  // console.log(\"<++++++++Traits++++>\", traits)\n  // function returnDog(selected) {\n  //   let DogIndex = 0;\n  //   let bestDogNum = 0;\n  //   for(let i = 0; i < dogData.length;i++) {   \n  //     let newArr = dogData[i].breeds[0].temperament.split(', ');\n  //     let numIntersection = selected.filter(element => newArr.includes(element));\n  //     if(numIntersection >= bestDogNum) {\n  //       DogIndex = i;\n  //       bestDogNum = numIntersection\n  //     }\n  //   }\n  //   return DogIndex;\n  // }\n  // let BestDogIndex = 0;\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 11\n  }, this); // <div className=\"App\">\n  //   <CssBaseline />\n  //   <AppBar\n  //     position=\"static\"\n  //     color=\"default\"\n  //     elevation={0}\n  //     sx={{ borderBottom: '1px solid lightgray' }}\n  //   >\n  //     <Toolbar>\n  //       <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n  //         HumanToDog\n  //       </Typography>\n  //       <Button \n  //         href=\"#\" \n  //         variant=\"outlined\" \n  //         sx={{ my: 1, mx: 1.5 }}\n  //         onClick={() => {\n  //           console.log(\"1 before fetch in App()\", dogData, \"---\", Date.now());\n  //           newFetch()\n  //         }}\n  //       >\n  //         AGAIN!\n  //       </Button>\n  //     </Toolbar>\n  //   </AppBar>\n  //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n  //     <Typography\n  //       variant=\"h2\"\n  //       align=\"center\"\n  //       color=\"text.primary\"\n  //       sx={{ py: 2}}\n  //     >\n  //       What dog are you? hehe\n  //     </Typography>\n  //     <Typography \n  //       variant=\"h5\" \n  //       align=\"center\" \n  //       color=\"text.secondary\"\n  //       sx={{ mx: 10 }}\n  //     >\n  //       Select the personality traits that best represent you to see what dog breed you are!\n  //     </Typography>\n  //   </Container>\n  //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n  //     <Grid container \n  //       spacing={0.5} \n  //       justifyContent=\"center\"\n  //       alignItems=\"flex-start\"\n  //     >\n  //       {\n  //         traits.map((trait) =>\n  //         <Grid\n  //           item\n  //           xs={6}\n  //           md={4}\n  //         >\n  //         {/* <TraitCard/> */}\n  //         <Button \n  //           href=\"#\" \n  //           variant=\"outlined\" \n  //           sx={{ my: 1, mx: 1.5 }}\n  //           onClick={() => {\n  //             selected.push(trait);\n  //           }}\n  //         >\n  //           {trait}\n  //         </Button>\n  //       </Grid>\n  //       )}\n  //     </Grid>\n  //   </Container>\n  //   {/* <Container maxWidth=\"md\" sx={{ my: 4}}>\n  //     <Typography \n  //       variant=\"h5\" \n  //       align=\"center\" \n  //       color=\"text.secondary\"\n  //       sx={{ mx: 10 }}\n  //     >\n  //       Selected Traits:\n  //     </Typography>\n  //     {\n  //       selected.map((trait) =>\n  //         <Typography>\n  //             {trait}\n  //         </Typography>\n  //     )}\n  //   </Container> */}\n  //   {/* End hero unit */}\n  //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n  //     <Button \n  //       href=\"#\" \n  //       variant=\"outlined\" \n  //       sx={{ my: 1, mx: 1.5 }}\n  //       onClick={() => {\n  //         BestDogIndex = returnDog(selected);\n  //         console.log(\"<++++++++BEST DOG INDEX++++>\", BestDogIndex)\n  //         // <Grid\n  //         //   item\n  //         //   xs={12}\n  //         //   md={4}\n  //         // >\n  //         // <CharacterCard\n  //         //     name = {dogData[returnDog(selected)].breeds[0].name}\n  //         //     image = {dogData[returnDog(selected)].url}\n  //         //     description = {dogData[returnDog(selected)].breeds[0].temperament}\n  //         // />\n  //         // </Grid>\n  //       }}\n  //     >\n  //       SUBMIT\n  //     </Button>\n  //   </Container>\n  //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n  //     <Typography\n  //       variant=\"h2\"\n  //       align=\"center\"\n  //       color=\"text.primary\"\n  //       sx={{ py: 2}}\n  //     >\n  //       THE TYPE OF DOG YOU ARE IS:\n  //     </Typography>\n  //     {console.log(\"DOG DATA BEFORE CHOSEN DOG\", dogData)}\n  //       <Grid\n  //         item\n  //         xs={12}\n  //         md={4}\n  //       >\n  //       <CharacterCard\n  //           name = {dogData[BestDogIndex]}//.breeds[0].name\n  //           // image = {dogData[BestDogIndex].url}\n  //           // description = {dogData[BestDogIndex].breeds[0].temperament}\n  //       />\n  //       </Grid>\n  //   </Container>\n  //   <Container maxWidth=\"lg\">\n  //     <Grid container \n  //       spacing={5} \n  //       justifyContent=\"center\"\n  //       alignItems=\"flex-start\"\n  //     >\n  //       {dogData.length>0 && dogData.map((dog) =>\n  //         <Grid\n  //           item\n  //           xs={12}\n  //           md={4}\n  //         >\n  //         <CharacterCard\n  //             name = {dog.breeds[0].name}\n  //             image = {dog.url}\n  //             description = {dog.breeds[0].temperament}\n  //         />\n  //       </Grid>\n  //       )}\n  //     </Grid>\n  //   </Container>\n  // </div>\n  // );\n}\n\n_s(App, \"U1Zo/XV3A0JfiVfFLEE1FVL1jos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AppBar","Button","Card","CardActions","CardContent","CardHeader","CardMedia","CssBaseline","Grid","Toolbar","Typography","Container","characters","CharacterCard","TraitCard","React","useState","useEffect","App","dogData","setDogData","dogTemperaments","setDogTemperaments","newFetch","requestOptions","method","redirect","fetch","then","response","json","result","console","log","Date","now","catch","error"],"sources":["/Users/jonathansi/Desktop/sea/Dog-App/src/App.js"],"sourcesContent":["import AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport './App.css';\nimport characters from './protagonists.json'\nimport CharacterCard from './CharacterCard.js';\nimport TraitCard from './TraitCard.js';\nimport React, { useState, useEffect } from 'react';\n\n\nfunction App() {\n  const [dogData, setDogData] = useState([]);\n  const [dogTemperaments, setDogTemperaments] = useState([]);\n\n  function newFetch() {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://api.thedogapi.com/v1/images/search?size=med&mime_types=jpg&format=json&has_breeds=true&order=RANDOM&page=0&limit=30\", requestOptions)\n                .then(response => response.json())\n                .then(result => {\n                  console.log(\"2 inside fetch\", Date.now());\n                  console.log(\"3 special dogs\", result, \"---\", Date.now())\n                  \n                  setDogData(result)\n                  // setDogTemperaments(result[breeds][0].temperament)\n                  setDogTemperaments(result)\n\n                })\n                .catch(error => console.log('error', error));\n            \n              console.log(\"4 after fetch\", dogTemperaments, \"---\", Date.now());\n  }\n\n  useEffect(() => {newFetch()}, [])\n\n  // var traits = new Set([]);\n\n  // for(let i = 0; i < dogTemperaments.length; i++) {\n  //   let newArr = []\n  //   if ('temperament' in dogTemperaments[i].breeds[0]) {\n  //     if (dogTemperaments[i].breeds[0].temperament.includes(',') === true) {\n  //       newArr = dogTemperaments[i].breeds[0].temperament.split(', ')\n  //     }\n  //     else {\n  //       newArr = dogTemperaments[i].breeds[0].temperament\n  //     }\n  //   }\n  //   traits = new Set([...traits, ...newArr]);\n  // }\n  // traits = Array.from(traits)\n\n  // var selected = []\n  // console.log(\"<++++++++DogTemps++++>\", dogTemperaments)\n  // console.log(\"<++++++++Traits++++>\", traits)\n\n  // function returnDog(selected) {\n\n  //   let DogIndex = 0;\n  //   let bestDogNum = 0;\n  //   for(let i = 0; i < dogData.length;i++) {   \n  //     let newArr = dogData[i].breeds[0].temperament.split(', ');\n  //     let numIntersection = selected.filter(element => newArr.includes(element));\n  //     if(numIntersection >= bestDogNum) {\n  //       DogIndex = i;\n  //       bestDogNum = numIntersection\n  //     }\n  //   }\n\n  //   return DogIndex;\n  // }\n\n  // let BestDogIndex = 0;\n\n\n  return (<p>hi</p>);\n    // <div className=\"App\">\n    //   <CssBaseline />\n    //   <AppBar\n    //     position=\"static\"\n    //     color=\"default\"\n    //     elevation={0}\n    //     sx={{ borderBottom: '1px solid lightgray' }}\n    //   >\n    //     <Toolbar>\n    //       <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n    //         HumanToDog\n    //       </Typography>\n    //       <Button \n    //         href=\"#\" \n    //         variant=\"outlined\" \n    //         sx={{ my: 1, mx: 1.5 }}\n    //         onClick={() => {\n    //           console.log(\"1 before fetch in App()\", dogData, \"---\", Date.now());\n    //           newFetch()\n    //         }}\n    //       >\n    //         AGAIN!\n    //       </Button>\n    //     </Toolbar>\n    //   </AppBar>\n    //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n    //     <Typography\n    //       variant=\"h2\"\n    //       align=\"center\"\n    //       color=\"text.primary\"\n    //       sx={{ py: 2}}\n    //     >\n    //       What dog are you? hehe\n    //     </Typography>\n    //     <Typography \n    //       variant=\"h5\" \n    //       align=\"center\" \n    //       color=\"text.secondary\"\n    //       sx={{ mx: 10 }}\n    //     >\n    //       Select the personality traits that best represent you to see what dog breed you are!\n    //     </Typography>\n    //   </Container>\n    //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n    //     <Grid container \n    //       spacing={0.5} \n    //       justifyContent=\"center\"\n    //       alignItems=\"flex-start\"\n    //     >\n    //       {\n    //         traits.map((trait) =>\n    //         <Grid\n    //           item\n    //           xs={6}\n    //           md={4}\n    //         >\n    //         {/* <TraitCard/> */}\n    //         <Button \n    //           href=\"#\" \n    //           variant=\"outlined\" \n    //           sx={{ my: 1, mx: 1.5 }}\n    //           onClick={() => {\n    //             selected.push(trait);\n    //           }}\n    //         >\n    //           {trait}\n    //         </Button>\n    //       </Grid>\n    //       )}\n    //     </Grid>\n    //   </Container>\n\n    //   {/* <Container maxWidth=\"md\" sx={{ my: 4}}>\n    //     <Typography \n    //       variant=\"h5\" \n    //       align=\"center\" \n    //       color=\"text.secondary\"\n    //       sx={{ mx: 10 }}\n    //     >\n    //       Selected Traits:\n    //     </Typography>\n    //     {\n    //       selected.map((trait) =>\n    //         <Typography>\n    //             {trait}\n    //         </Typography>\n    //     )}\n    //   </Container> */}\n    //   {/* End hero unit */}\n      \n    //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n    //     <Button \n    //       href=\"#\" \n    //       variant=\"outlined\" \n    //       sx={{ my: 1, mx: 1.5 }}\n    //       onClick={() => {\n    //         BestDogIndex = returnDog(selected);\n    //         console.log(\"<++++++++BEST DOG INDEX++++>\", BestDogIndex)\n    //         // <Grid\n    //         //   item\n    //         //   xs={12}\n    //         //   md={4}\n    //         // >\n    //         // <CharacterCard\n    //         //     name = {dogData[returnDog(selected)].breeds[0].name}\n    //         //     image = {dogData[returnDog(selected)].url}\n    //         //     description = {dogData[returnDog(selected)].breeds[0].temperament}\n                \n    //         // />\n    //         // </Grid>\n\n    //       }}\n    //     >\n    //       SUBMIT\n    //     </Button>\n    //   </Container>\n\n    //   <Container maxWidth=\"md\" sx={{ my: 4}}>\n\n    //     <Typography\n    //       variant=\"h2\"\n    //       align=\"center\"\n    //       color=\"text.primary\"\n    //       sx={{ py: 2}}\n    //     >\n    //       THE TYPE OF DOG YOU ARE IS:\n    //     </Typography>\n    //     {console.log(\"DOG DATA BEFORE CHOSEN DOG\", dogData)}\n    //       <Grid\n    //         item\n    //         xs={12}\n    //         md={4}\n    //       >\n    //       <CharacterCard\n    //           name = {dogData[BestDogIndex]}//.breeds[0].name\n    //           // image = {dogData[BestDogIndex].url}\n    //           // description = {dogData[BestDogIndex].breeds[0].temperament}\n              \n    //       />\n    //       </Grid>\n    //   </Container>\n\n    //   <Container maxWidth=\"lg\">\n    //     <Grid container \n    //       spacing={5} \n    //       justifyContent=\"center\"\n    //       alignItems=\"flex-start\"\n    //     >\n    //       {dogData.length>0 && dogData.map((dog) =>\n    //         <Grid\n    //           item\n    //           xs={12}\n    //           md={4}\n    //         >\n    //         <CharacterCard\n    //             name = {dog.breeds[0].name}\n    //             image = {dog.url}\n    //             description = {dog.breeds[0].temperament}\n                \n    //         />\n    //       </Grid>\n    //       )}\n    //     </Grid>\n    //   </Container>\n    // </div>\n  // );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;;EAEA,SAASO,QAAT,GAAoB;IAClB,IAAIC,cAAc,GAAG;MACnBC,MAAM,EAAE,KADW;MAEnBC,QAAQ,EAAE;IAFS,CAArB;IAIAC,KAAK,CAAC,6HAAD,EAAgIH,cAAhI,CAAL,CACaI,IADb,CACkBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAD9B,EAEaF,IAFb,CAEkBG,MAAM,IAAI;MACdC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,IAAI,CAACC,GAAL,EAA9B;MACAH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,MAA9B,EAAsC,KAAtC,EAA6CG,IAAI,CAACC,GAAL,EAA7C;MAEAf,UAAU,CAACW,MAAD,CAAV,CAJc,CAKd;;MACAT,kBAAkB,CAACS,MAAD,CAAlB;IAED,CAVb,EAWaK,KAXb,CAWmBC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB,CAX5B;IAaUL,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BZ,eAA7B,EAA8C,KAA9C,EAAqDa,IAAI,CAACC,GAAL,EAArD;EACX;;EAEDlB,SAAS,CAAC,MAAM;IAACM,QAAQ;EAAG,CAAnB,EAAqB,EAArB,CAAT,CAzBa,CA2Bb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;;EAGA,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR,CAlEa,CAmEX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACF;AACD;;GAzOQL,G;;KAAAA,G;AA2OT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}